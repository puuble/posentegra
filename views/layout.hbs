<!DOCTYPE html>
<html>

<head>
    <title>{{title}}</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css" />
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <meta name="csrf-token" content="{{ enviroment.token }}">
    <style>
        #upload-photo {
            opacity: 0;
            position: absolute;
            z-index: -1;
        }

    </style>
</head>

<body data-theme="dark">
    {{{body}}}


    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

    <!-- bottom offcanvas -->
    <div class="offcanvas offcanvas-start" data-bs-scroll="true" tabindex="-1" id="offcanvasWithBothOptions"
        aria-labelledby="offcanvasWithBothOptionsLabel">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="offcanvasWithBothOptionsLabel">Ayarlar</h5>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body ">

            <div id="server" class="row row-cols-xxl-1 row-cols-lg-1 row-cols-1" data-server="{{SERVER}}">
                {{#each restaurants}}

                <div class="col mb-2">
                    <div class="card card-body">
                        <div class="d-flex mb-4 align-items-center">

                            <div class="flex-grow-1 ms-2">
                                <h5 class="card-title mb-1">{{this.name}}</h5>

                            </div>
                        </div>

                        {{#each this.options}}
                        <ol class="list-group  options text-white mb-2 " data-row="{{json this}}">

                        </ol>

                        {{/each}}

                    </div>
                </div><!-- end col -->

                {{/each}}

            </div>



        </div>
    </div>


    <script>
        function serviceTimes(selected = false) {
            let serviceTimes = [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75]
            let times = ''
            serviceTimes.forEach(element => {
                if (selected == element) {
                    times += `<option value="${element}" selected>${element}dk</option>`
                } else {
                    times += `<option value="${element}">${element}dk</option>`
                }

            });

            return times
        }
        function ysOptions(slug, row) {
            let status = 'Açık'
            let status_2 = 'Açık'
            let status_3 = 'Yoğun'
            let status_4 = 0

            if (!row.status) {
                status = 'Kapalı'
            }
            if (!row.otomatikOnay) {
                status_2 = 'Kapalı'
            }
            if (!row.yogun) {
                status_3 = 'Yoğun değil'
            }
            if (row.hasOwnProperty('service')) {
                status_4 = row.service
            }

            let cls = row.status ? 'bg-success' : 'bg-danger'
            let attr = row.status ? 'checked' : ''
            let attr_2 = row.otomatikOnay ? 'checked' : ''
            let cls_2 = row.otomatikOnay ? 'bg-success' : 'bg-danger'

            let attr_3 = row.yogun ? 'checked' : ''
            let cls_3 = row.yogun ? 'bg-warning' : 'bg-success'



            let html = `<li class="list-group-item d-flex justify-content-between optionTitle align-items-start">
                <div class="ms-2 me-auto ">
                    <div class="fw-bold  ">${slug}</div>
                 </div>
                </li>`

            html += ` <li class="list-group-item d-flex justify-content-between optionTitle  align-items-start"> 
                     <div class="ms-2 me-auto ">
                        <div class="fw-bold  ">Restoran Durum:</div>
                        <span class="badge bd-${row._id}-status  ${cls} rounded-pill">${status}</span>
                     </div>
                     <div class="form-check form-switch">
                        <input class="form-check-input" data-id="${row._id}" data-restaurant="${row.restaurant_id}" data-type="status" data-provider="ys" type="checkbox" ${attr}  role="switch" id="flexSwitchCheckDefault${row._id}">
                    </div>
                </li>`
            html += ` <li class="list-group-item d-flex justify-content-between optionTitle  align-items-start"> 
                     <div class="ms-2 me-auto ">
                        <div class="fw-bold  ">Otomatik Onay:</div>
                        <span class="badge  bd-${row._id}-otomatikOnay ${cls_2} rounded-pill">${status_2}</span>
                     </div>
                     <div class="form-check form-switch">
                        <input class="form-check-input" data-id="${row._id}" data-type="otomatikOnay" data-provider="ys" type="checkbox" ${attr_2}  role="switch" id="flexSwitchCheckDefault${row._id}">
                    </div>
                </li>`
            html += ` <li class="list-group-item d-flex justify-content-between  optionTitle align-items-start"> 
                     <div class="ms-2 me-auto ">
                        <div class="fw-bold  ">Yoğuna Al:</div>
                        <span class="badge  bd-${row._id}-yogun ${cls_3} rounded-pill">${status_3}</span>
                     </div>
                     <div class="form-check form-switch">
                        <input class="form-check-input" data-id="${row._id}" data-type="yogun"  data-provider="ys" type="checkbox" ${attr_3}  role="switch" id="flexSwitchCheckDefault${row._id}">
                    </div>
                </li>`
            html += ` <li class="list-group-item d-flex justify-content-between optionTitle  align-items-start"> 
                     <div class="ms-2 me-auto ">
                        <div class="fw-bold  ">Servis Süresi:</div>
                        <span class="badge  bd-${row._id}-service bg-info rounded-pill">${status_4}dk</span>
                     </div>
                     <div class="">
                       <select class="form-select form-select-lg" aria-label=".form-select-lg example"   data-provider="ys"  data-id="${row._id}" data-type="service">
                            ${serviceTimes(status_4)}
                        </select>
                    </div>
                </li>`

            return html
        }

        function getirOptions(slug, row) {
            let status = 'Açık'
            let status_2 = 'Açık'
            let status_3 = 'Açık'
            let status_4 = 0

            if (!row.status) {
                status = 'Kapalı'
            }
            if (!row.otomatikOnay) {
                status_2 = 'Kapalı'
            }
            if (!row.kurye) {
                status_3 = 'Kapalı'
            }

            let cls = row.status ? 'bg-success' : 'bg-danger'
            let attr = row.status ? 'checked' : ''
            let attr_2 = row.otomatikOnay ? 'checked' : ''
            let cls_2 = row.otomatikOnay ? 'bg-success' : 'bg-danger'

            let attr_3 = row.kurye ? 'checked' : ''
            let cls_3 = row.kurye ? 'bg-success' : 'bg-danger'



            let html = `<li class="list-group-item d-flex justify-content-between optionTitle align-items-start">
                <div class="ms-2 me-auto ">
                    <div class="fw-bold  ">${slug}</div>
                 </div>
                </li>`

            html += ` <li class="list-group-item d-flex justify-content-between optionTitle  align-items-start"> 
                     <div class="ms-2 me-auto ">
                        <div class="fw-bold  ">Restoran Durum:</div>
                        <span class="badge bd-${row._id}-status ${cls} rounded-pill">${status}</span>
                     </div>
                     <div class="form-check form-switch">
                        <input class="form-check-input"  data-id="${row._id}" data-type="status"  data-provider="getir" type="checkbox" ${attr}  role="switch" id="flexSwitchCheckDefault${row._id}">
                    </div>
                </li>`
            html += ` <li class="list-group-item d-flex justify-content-between optionTitle  align-items-start"> 
                     <div class="ms-2 me-auto ">
                        <div class="fw-bold  ">Otomatik Onay:</div>
                        <span class="badge  bd-${row._id}-otomatikOnay ${cls_2} rounded-pill">${status_2}</span>
                     </div>
                     <div class="form-check form-switch">
                        <input class="form-check-input"  data-id="${row._id}" data-type="otomatikOnay" data-provider="getir" type="checkbox" ${attr_2}  role="switch" id="flexSwitchCheckDefault${row._id}">
                    </div>
                </li>`
            html += ` <li class="list-group-item d-flex justify-content-between  optionTitle align-items-start"> 
                     <div class="ms-2 me-auto ">
                        <div class="fw-bold  ">Kurye Durum:</div>
                        <span class="badge  bd-${row._id}-kurye ${cls_3} rounded-pill">${status_3}</span>
                     </div>
                     <div class="form-check form-switch">
                        <input class="form-check-input"  data-id="${row._id}" data-type="kurye" data-provider="getir" type="checkbox" ${attr_3}  role="switch" id="flexSwitchCheckDefault${row._id}">
                    </div>
                </li>`


            return html
        }
        function bossOptions(slug, row, server) {
            let html = `<li class="list-group-item d-flex justify-content-between optionTitle align-items-start">
                <div class="ms-2 me-auto " style="width:100%">
                    <div class="fw-bold  ">${row.name}</div>
                    <form id="formIt" action="" enctype="multipart/form-data" method="post">
                    <label for="upload-photo" style="width:100%">Arşiv Dosyası Seçiniz</label>
                    <input type="file" name="file" id="upload-photo" />
                        
                     <button type="submit" class="btn btn-success  d-none btn-sm" style="width:100%">Yükle</button>
                     </form>
                 </div>
                </li> `

            return html
        }
        function tyOptions(slug, row) {
            let status = 'Açık'
            let status_2 = 'Açık'
            let status_3 = 'Açık'
            let status_4 = 0

            if (!row.status) {
                status = 'Kapalı'
            }
            if (!row.otomatikOnay) {
                status_2 = 'Kapalı'
            }

            if (row.hasOwnProperty('service')) {
                status_4 = row.service
            }

            let cls = row.status ? 'bg-success' : 'bg-danger'
            let attr = row.status ? 'checked' : ''
            let attr_2 = row.otomatikOnay ? 'checked' : ''
            let cls_2 = row.otomatikOnay ? 'bg-success' : 'bg-danger'



            let html = `<li class="list-group-item d-flex justify-content-between optionTitle align-items-start">
                <div class="ms-2 me-auto ">
                    <div class="fw-bold  ">${slug}</div>
                 </div>
                </li>`

            html += ` <li class="list-group-item d-flex justify-content-between optionTitle  align-items-start"> 
                     <div class="ms-2 me-auto ">
                        <div class="fw-bold  ">Restoran Durum:</div>
                        <span class="badge bd-${row._id}-status  ${cls} rounded-pill">${status}</span>
                     </div>
                     <div class="form-check form-switch">
                        <input class="form-check-input"  data-id="${row._id}" data-type="status" data-provider="ty" type="checkbox" ${attr}  role="switch" id="flexSwitchCheckDefault${row._id}">
                    </div>
                </li>`
            html += ` <li class="list-group-item d-flex justify-content-between optionTitle  align-items-start"> 
                     <div class="ms-2 me-auto ">
                        <div class="fw-bold  ">Otomatik Onay:</div>
                        <span class="badge bd-${row._id}-otomatikOnay  ${cls_2} rounded-pill">${status_2}</span>
                     </div>
                     <div class="form-check form-switch">
                        <input class="form-check-input"  data-id="${row._id}" data-type="otomatikOnay" data-provider="ty" type="checkbox" ${attr_2}  role="switch" id="flexSwitchCheckDefault${row._id}">
                    </div>
                </li>`

            html += ` <li class="list-group-item d-flex justify-content-between optionTitle  align-items-start"> 
                     <div class="ms-2 me-auto ">
                        <div class="fw-bold  ">Hazırlanma Süresi:</div>
                        <span class="badge  bd-${row._id}-service  bg-info rounded-pill">${status_4}dk</span>
                     </div>
                     <div class="">
                       <select  data-id="${row._id}" data-type="service" data-provider="ty" class="form-select form-select-lg" aria-label=".form-select-lg example">
                            ${serviceTimes(status_4)}
                        </select>
                    </div>
                </li>`

            return html
        }

        function addOption(row) {
            console.log(row, "row")
            let slug = 'Getir Yemek'
            if (row.slug == 'ys') {
                slug = 'Yemeksepeti'
            } else if (row.slug == 'ty') {
                slug = 'Trendyol Yemek'
            }
            let status = 'Açık'
            if (!row.status) {
                status = 'Kapalı'
            }
            let cls = row.status ? 'bg-success' : 'bg-danger'
            let attr = row.status ? 'checked' : ''
            let html = ''
            if (row.slug == 'ys') {
                html += ysOptions(slug, row)
            }
            if (row.slug == 'getir') {
                html += getirOptions(slug, row)
            }

            if (row.slug == 'ty') {
                html += tyOptions(slug, row)
            }

            if (row.slug == 'bossentegra') {
                html += bossOptions(slug, row)
            }


            return html

        }
        function modalYukle(rowData) {
            let products = ``
            if (Array.isArray(rowData.products)) {
                rowData.products.forEach(element => {
                    let optionCategories = ``
                    if (Array.isArray(element.optionCategories)) {
                        element.optionCategories.forEach(cat => {
                            if (cat.hasOwnProperty('options')) {
                                if (Array.isArray(cat.options)) {
                                    let options = cat.options.map(x => x.name.tr);
                                    options = options.join(',')
                                    optionCategories += `<li> ${cat.name.tr}: ${options}</li> `
                                } else {
                                    optionCategories += `<li> ${cat.name.tr}</li> `
                                }
                            } else {
                                optionCategories += `<li> ${cat.name.tr}</li> `
                            }



                        })
                    }
                    products += `<tr style ="border-bottom: 1px solid rgb(221, 221, 221);" >
                            <td style="font-size: 15pt;">${element.name.tr}
                              <ul>
                                    ${optionCategories}
                                   
                                </ul>
                            </td>
                            <td class="text-right" style="font-size: 15pt;">₺ ${element.priceWithOption}</td>
                            <td class="text-right" style="font-size: 15pt;">${element.count}</td>
                            <td class="text-right" style="font-size: 15pt;">₺ ${element.priceWithOption}</td>
                </tr> `

                });

            }

            let deliveryType = rowData.deliveryType == 2 ? 'Restoran Kuryesi Teslim Edecek!' : 'Entegrasyon Kuryesi Teslim Edecek! '
            let html = `
        <div class="modal fade" id="modal${rowData._id}" tabindex="-1" role="dialog"  >
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Sipariş Özeti</h5>
                        <button type="button" class="close btn btn-danger btn-sm" data-id="${rowData._id}" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-4 flex-column">
                            <div class="w-100 text-center">
                                <h1>${rowData.provider.kaynak}</h1>
                            </div>
                            <div class="mt-4 w-100 row">
                                <div class="col">
                                    <div class="my-1 mx-1 row">
                                        <span class="my-1"
                                            style="font-size: 15pt; color: red; font-weight: 600;">
                                            Teslimat Tipi : ${deliveryType}
                                        </span>
                                    </div>
                                    <div class="my-1 mx-1 row"><span class="my-1"
                                        style="font-size: 15pt; color: red; font-weight: 600;">
                                        Ödeme Yöntemi : ${rowData.paymentMethodText ? rowData.paymentMethodText.tr : rowData.paymentMethod}</span>
                                    </div>
                                    <div class="my-1 mx-1 row"><span class="my-1" style="font-size: 15pt;">Restoran
                                        : ${rowData.restaurant.name}</span></div>
                                    <div class="my-1 mx-1 row"><span class="my-1" style="font-size: 15pt;">Onay Kodu
                                        : ${rowData.confirmationId}</span></div>
                                    <div class="my-1 mx-1 row"><span class="my-1" style="font-size: 15pt;">Sipariş Tarihi
                                        : ${moment(rowData.created_at).format('H:mm DD.MM.YYYY')}</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <table width="100%">
                            <thead>
                                <tr style="border-bottom: 1px solid rgb(170, 170, 170);">
                                    <th style="font-size: 15pt;">Ürün</th>
                                    <th class="text-right" style="width: 90px; font-size: 15pt;">Fiyat</th>
                                    <th class="text-right" style="width: 90px; font-size: 15pt;">Adet</th>
                                    <th class="text-right" style="width: 90px; font-size: 15pt;">Tutar</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${products}

                                <tr>
                                    <td colspan="4" class="text-right" style="font-size: 15pt; font-weight: bold;">Toplam : ₺
                                        ${rowData.totalDiscountedPrice}</td>
                                </tr>
                            </tbody>
                        </table>
                        <div class="mt-3"></div>
                        <div class="mt-3" style="font-size: 15pt;">
                            <p class="mb-1"><b>Müşteri:</b> ${rowData.client.name}</p>
                            <p class="mb-1"><b>Adres:</b> ${rowData.client.deliveryAddress.address}</p>
                            <div class="container">
                                <div class="row">
                                    <p class="mb-1 mr-2"><b>Apt No:</b>${rowData.client.deliveryAddress.aptNo}</p>
                                    <p class="mb-1 mr-2"><b>Daire No:</b> ${rowData.client.deliveryAddress.doorNo}</p>
                                    <p class="mb-1 mr-2"><b>Kat:</b> ${rowData.client.deliveryAddress.floor}</p>
                                </div>
                            </div>
                            <p class="mb-1"><b>Adres Tarifi:</b> ${rowData.client.deliveryAddress.description}</p>
                            <p class="mb-1 pb-1" style="border-bottom: 1px solid rgb(221, 221, 221);"><b>Müşteri İletişim:</b>
                                ${rowData.client.clientPhoneNumber}</p>
                            <p class="text-center">
                                <button class="btn sendAgain mt-4 btn-info" data-pid="${rowData.pid}" >Yeniden Gönder</button>
                            </p>


                        </div>
                    </div>

                </div>
            </div>
        </div> `
            return html;
        }
        $('#exampleModal').on('show.bs.modal', function (e) {
            // do something...
            $("#serverStatus").removeClass('btn-success').addClass('btn-danger').html('Bağlantı Koptu')
        })
        $('#exampleModal').on('hidden.bs.modal', function (e) {
            // do something...
            $("#serverStatus").removeClass('btn-danger').addClass('btn-success').html('Bağlandı')
        })
        function baglantiKoptu() {
            $('#exampleModal').modal({ backdrop: 'static', keyboard: false })
            $('#exampleModal').modal('show')
        }
        function baglan() {
            $('#exampleModal').modal('hide')
            $("#serverStatus").removeClass('btn-danger').addClass('btn-success').html('Bağlandı')
        }
        function socket() {
            let userId = '{{USER_ID}}'
            let channel = `private - trigger.${userId} `
            let event = 'Trigger'

            var channelUser = pusher.subscribe(channel)
            channelUser.bind('pusher:subscription_succeeded', async () => {
                baglan()
                tabloYukle(table)
            })
            channelUser.bind("pusher:subscription_error", (error) => {
                console.log(error)
                baglantiKoptu()
            });
            channelUser.bind('client-connected', async (data) => {
                if (data.connected) {
                    baglan()

                }
            })
            var socketId = null;
            pusher.connection.bind("connected", () => {
                socketId = pusher.connection.socket_id;
                console.log(socketId)
            });
        }



        function getButtons(row, data, status) {

            let statues = []
            statues[325] = '<button class="btn btn-sm btn-warning w-100">Ön Onay Bekliyor</button> '
            statues[350] = '<button class="btn btn-sm btn-success w-100">Ön Onay Verildi</button> '
            statues[1600] = '<button class="btn btn-sm btn-danger w-100">İptal Edildi</button> '
            statues[400] = '<button class="btn btn-sm btn-warning w-100 dugme " data-status="400" data-restaurant="' + row.restaurantId + '"  data-pid="' + row.pid + '" data-deliver="' + row.deliveryType + '" data-provider="' + row.slug + '" data-id="' + row['_id'] + '">Onay Bekliyor</button> '
            statues[500] = '<button class="btn btn-sm btn-success w-100">Onaylandı</button> '
            statues[550] = '<button class="btn btn-sm btn-info w-100"> Hazırlandı</button> '
            statues[600] = '<button class="btn btn-sm btn-secondary w-100">Teslim Edildi (Kurye)</button> '
            statues[700] = '<button class="btn btn-sm btn-info w-100">Yolda</button> '
            statues[800] = '<button class="btn btn-sm btn-secondary w-100">Teslim Edildi (Kurye)</button> '
            statues[900] = '<button class="btn btn-sm btn-secondary w-100">Teslim Edildi</button> '
            statues[1500] = '<button class="btn btn-sm btn-danger w-100">İptal Edildi (Site)</button> '
            let notExists = [600, 800, 900, 1500, 1600]
            if (statues[data]) {
                if (notExists.indexOf(data) == -1) {
                    status = `${statues[data]} <button type="button" class="btn dugme btn-sm btn-danger w-100" data-restaurant="${row.restaurantId}" data-deliver="${row.deliveryType}" data-pid="${row.pid}" data-status="1600" data-provider="${row.slug}" data-id="${row['_id']}" >İptal Et</button> <button type="button" data-id="${row._id}" class="btn modalAc btn-sm btn-secondary w-100">Detay</button>`
                } else {
                    status = statues[data]
                }
            }

            return status
        }

        $('.options').each(function (index, el) {
            let row = $(this).data('row')
            let server = $("#server").data('server')

            $(this).html(addOption(row))
            $("#upload-photo").on('change', function () {
                $("#formIt > button").removeClass('d-none')
                $("#formIt > label").html('Seçildi! Lütfen Yükle Düğmesine basınız')
                $("#formIt").submit(function (event) {
                    event.preventDefault();
                    const formElement = document.querySelector("form");
                    const formData = new FormData(formElement);

                    const request = new XMLHttpRequest();
                    request.onreadystatechange = () => {
                        if (request.readyState === 4) {
                            let response = JSON.parse(request.response)
                            if (response.success) {
                                $("#formIt > label").html('<div class="alert alert-success"  style="width:100%" >Başarılı bir şekilde yüklendi</div>')
                            } else {
                                $("#formIt > label").html('<div class="alert alert-danger"  style="width:100%" >Bir Sorun Oluştu</div>')

                            }
                        }
                    }
                    request.open("POST", server + '/api/file-upload');
                    request.setRequestHeader("Authorization", 'Bearer ' + $('meta[name="csrf-token"]').attr('content'));

                    request.send(formData);
                    $("#formIt > label").html('Yükleniyor Lütfen Bekleyiniz.')
                    $("#formIt > button").addClass('d-none')
                });
            })

        })
        $('.form-check-input').on('change', function () {
            let status = false
            if (this.checked) {
                status = true;
            }
            let id = $(this).data('id')
            let type = $(this).data('type')
            let provider = $(this).data('provider')
            let restaurantId = $(this).data('restaurant')


            console.log(restaurantId)

            $.ajax({
                method: "POST",
                url: "/changeRestaurantStatus",
                data: { status, id, type, provider, restaurantId }
            })
                .done(function (result) {

                    if (result.success) {

                        let ob = $(`.bd-${id}-${type}`)
                        if (type != 'service') {
                            if (result.request.status == "false") {
                                if (type == 'yogun') {
                                    ob.removeClass('bg-warning').addClass('bg-success').html('Yoğun Değil');
                                } else {
                                    ob.removeClass('bg-success').removeClass('bg-danger').addClass('bg-danger').html('Kapalı');
                                }

                            } else if (result.request.status == "true") {
                                if (type == 'yogun') {
                                    ob.removeClass('bg-success').addClass('bg-warning').html('Yoğun');
                                } else {
                                    ob.removeClass('bg-success').removeClass('bg-danger').addClass('bg-success').html('Açık');
                                }

                            }

                        }
                    }
                })
        })
        $('.form-select').on('change', function () {

            let id = $(this).data('id')
            let type = $(this).data('type')
            let status = $(this).val();
            $.ajax({
                method: "POST",
                url: "/changeRestaurantStatus",
                data: { status, id, type }
            })
                .done(function (result) {
                    if (result.success) {

                        let ob = $(`.bd-${id}-${type}`)
                        if (type == 'service') {
                            ob.html(status + 'dk')
                        }
                    }
                })
        })
        $('.moment').each(function (index, el) {
            let time = $(this).data('time')
            $(this).html(moment(time).format('YYYY-MM-DD HH:mm:ss'))
        })
        $("#loginForm").submit(function (event) {
            event.preventDefault();
            $.ajax({
                method: "POST",
                url: "/token",
                data: $(this).serializeArray()
            })
                .done(function (res) {
                    if (res.success) {
                        console.log(res)
                        window.location.reload()
                    } else {
                        console.log(res)
                        let translations = {
                            'Unauthenticated.': "Geçersiz Key",
                        }
                        $("#error").html(translations[res.msg] ? translations[res.msg] : res.msg)
                        $("#error").removeClass('d-none')
                    }
                });
        });

        $('.buttons').each(function (index, el) {
            let status = $(this).data('status')
            let row = $(this).data('row')

            let btn = getButtons(row, status, 400)

            $(this).html(btn)
            let html = modalYukle(row)
            $("body").append(html)


            $(".dugme").on('click', function () {
                let dataId = $(this).data('id')
                let status = $(this).data('status')
                let provider = $(this).data('provider')
                let deliveryType = $(this).data('deliver')
                let pid = $(this).data('pid')
                let restaurantId = $(this).data('restaurant')

                $.ajax({
                    method: "POST",
                    url: `/ changeStatus`,
                    data: {
                        status,
                        provider,
                        id: dataId,
                        pid,
                        deliveryType,
                        restaurantId
                    }
                })
                    .done(function (res) {
                        if (res.success) {

                            // window.location.reload()
                            table.ajax.reload();
                            setTimeout(function () {
                                tabloYukle(table)
                            }, 1500)


                        }
                    });
            })

        })

        $(".modalAc").on('click', function () {
            let id = $(this).data('id')
            console.log('', "orders")
            $('#modal' + id).modal('show')
        })
        $(".close").on('click', function () {
            let id = $(this).data('id')
            $('#modal' + id).modal('hide')
        })
        $('.sendAgain').on('click', function () {
            let id = $(this).attr('data-pid')
            console.log(id)
            $.ajax({
                method: "GET",
                url: "/sendAgain?id=" + id,
            })
                .done(function (res) {
                    console.log(res)
                })
        })
        $(".settings").on('click', function () {
            const myModal = new bootstrap.Modal('#settingModal', {
                keyboard: false,
                backdrop: false,
            })
            myModal.show()
        })

        $('.switch').on('click', function () {
            let theme = $('body').attr('data-theme')
            let text = 'Dark'
            if (theme == 'dark') {
                text = 'Dark'
            } else {
                text = 'Light'
            }
            $('.switch').text(text)

            if ($('body').attr('data-theme') == 'dark') {
                $('.ys').css('color', '#000')
                $('.ty').css('color', '#000')
                $('.getir').css('color', '#000')

                $('body').attr('data-theme', 'light')
            } else {
                $('.ys').css('color', '#fff')
                $('.ty').css('color', '#fff')
                $('.getir').css('color', '#fff')
                $('body').attr('data-theme', 'dark')
            }

        })
    </script>

</body>

</html>
